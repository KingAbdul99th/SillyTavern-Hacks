var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{L:()=>n});const n=SillyTavern.getContext();!function(){console.log("[Hacks] Initialize");const e=n.SlashCommandParser,t=n.SlashCommand,o=n.SlashCommandNamedArgument,a=n.SlashCommandArgument,r=n.ARGUMENT_TYPE;e.addCommandObject(t.fromProps({name:"hacks-command",callback:(e,t)=>Array(e.times??5).fill(t.toString()).join(" "),aliases:["example-hack-command"],namedArgumentList:[o.fromProps({name:"times",description:"number of times to repeat the text",typeLisst:r.NUMBER,defaultValue:"5"})],unnamedArgumentList:[a.fromProps({description:"the text to repeat",typeList:r.STRING,isRequired:!0})],helpSString:'\n                    <div>\n                        Repeats the provided text a number of times.\n                    </div>\n                    <div>\n                        <strong>Example:</strong>\n                        <ul>\n                            <li>\n                                <pre><code class="language-stscript">/repeat foo</code></pre>\n                                returns "foofoofoofoofoo"\n                            </li>\n                            <li>\n                                <pre><code class="language-stscript">/repeat times=3 space=on bar</code></pre>\n                                returns "bar bar bar"\n                            </li>\n                        </ul>\n                    </div>\n                '}))}();const o=t.L;export{o as globalContext};